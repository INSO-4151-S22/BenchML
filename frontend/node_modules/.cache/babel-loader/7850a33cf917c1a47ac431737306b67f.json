{"ast":null,"code":"var _jsxFileName = \"/Users/carolinasantiago/Documents/BenchML/frontend/src/Components/MyModelsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './Columns';\nimport '../css/MyModelsTable.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...columns.getHeaderProps,\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/carolinasantiago/Documents/BenchML/frontend/src/Components/MyModelsTable.js"],"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","BasicTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,8BAAP;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B,QAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAMK,aAAa,GAAGN,QAAQ,CAAC;AAC3BI,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAKA,QAAM;AACFE,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGDC,IAAAA,YAHC;AAIDC,IAAAA,IAJC;AAKDC,IAAAA;AALC,MAMFL,aANJ;AAQA,sBACI,sBAAWC,aAAa,EAAxB;AAAA,4BACI;AAAA,gBAEQE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACjB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEID,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQZ,OAAO,CAACa,cAAhB;AAAA,oBAAiCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFJ;AAAA;AAAA;AAAA;AAAA,cADA;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,sBAAWV,iBAAiB,EAA5B;AAAA,gBAEQE,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;AACZR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACI;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OAPD;AAFR;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAjDM;;GAAMhB,U;UAKaH,Q;;;KALbG,U","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS } from './Columns'\nimport '../css/MyModelsTable.min.css'\n\nexport const BasicTable = () => {\n\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    })\n\n    const { \n        getTableProps, \n        getTableBodyProps,\n         headerGroups, \n         rows, \n         prepareRow,\n    } = tableInstance\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {\n                    headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()} >\n                    {\n                        headerGroup.headers.map(column => (\n                            <th {...columns.getHeaderProps}>{column.render('Header')}</th>\n                        ))\n                    }\n                    </tr>\n\n                ))}\n                \n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr>\n                            \n                            </tr>\n                        )\n                    })\n                }\n               \n            </tbody>\n        </table>\n    )\n}"]},"metadata":{},"sourceType":"module"}